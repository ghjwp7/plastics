This directory contains files like the following:

gen-channel-asm2.py --- SolidPython program to generate channels and
  rails that can be assembled to make dispensers for reel-supplied SMD
  parts.  An early version of the smd-channelsProduce system.

smd-channelsProduce system --- Source code for this Qt menu, XML data
storage, and SolidPython 3D modeling program appears in five .py
files: ChannelCallbacks.py, ChannelVars.py, loadTablesForXML.py,
make-xml-accessors.py, and smd-channelsProduce.py, described below.
The system architecture allows supporting applications other than SMD
channel production by complete replacement of main program
smd-channelsProduce and data file smd-channels3.xml, plus light
modification of the other python modules.

A data-table schema appears in one .xml file: smd-channels3.xml. This
prototypical XML file is specifically for the smd-channelsProduce
application.  Each kind of app implemented in this system needs an XML
file describing its own sets of tables and vars, but the structure of
the XML files for different apps will be similar, eg specifying column
headings and default table data.

smd-channelsProduce.py --- Main program for SMD channels application.
Has SolidPython code to generate channel sets.  Channel specifications
come from tables and menus managed by code in other modules.  For
different apps, most of the smd-channelsProduce code is replaced.

loadTablesForXML.py --- Module containing most XML- and Qt-related
code. Reads .xml file (eg smd-channels3.xml); constructs tables with
QtTableWidgets to display data and allow editing; displays buttons
from list given by ChannelCallbacks.  loadTablesForXML is supposed to
be app-independent -- general enough to work across multiple apps with
little change.

ChannelCallbacks.py --- Module with callback functions.  Implements
cell-change (etc) callbacks via links set by calls from
smd-channelsProduce.  Implements exit and file save when Quit or Save
buttons are clicked.  Calls linked routines in smd-channelsProduce for
volume calculations and for unit production when cells change or
Produce button is clicked.  Most of ChannelCallbacks is
app-independent; a few items may need change.

ChannelVars.py --- Module with table data accessor classes and methods
(gets and puts for table-cell data and for table-level data, eg names
and formats of columns).  This module is generated by
make-xml-accessors.py -- don't edit it directly.

make-xml-accessors.py --- Reads .xml file and writes out program
ChannelVars.py with a class of accessors for each table.
App-independent, except for default file names in main

